name: Semantic Release for Apps

on:
  push:
    branches:
      - master

permissions: write-all

jobs:
  release:
    name: Semantic Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        id: checkout
        with:
          fetch-depth: 0

      # Get the folder path of changed file
      - name: Get changed directories
        id: changed_dirs
        run: |
          CHANGED_DIRS=$(git diff-tree --no-commit-id --name-only -r ${{ github.sha }} | awk -F/ 'BEGIN{OFS=FS} NF--')
          if [[ -z $CHANGED_DIRS ]]; then
            echo "::set-output name=dirs::"
          else
            echo "::set-output name=dirs::$CHANGED_DIRS"
          fi

      # Update the tag format to include the name of the directory
      - name: Update tag format
        id: update_tag_format
        run: |
          APP_DIRS="${{ steps.changed_dirs.outputs.dirs }}"
          if [[ -z $APP_DIRS ]]; then
            echo "::set-output name=tag_format::v\${version}"
          else
            APP_NAME=$(echo "$APP_DIRS" | awk '{print tolower($0)}')
            echo "::set-output name=tag_format::${APP_NAME}-v\${version}"
          fi

      # Determine the path to the CHANGELOG.md file
      - name: Determine CHANGELOG.md path
        id: changelog_path
        run: |
          APP_DIRS="${{ steps.changed_dirs.outputs.dirs }}"
          if [[ -z $APP_DIRS ]]; then
            echo "::set-output name=path::./CHANGELOG.md"
          else
            while IFS= read -r dir; do
              if [[ -f "${dir}/CHANGELOG.md" ]]; then
                echo "::set-output name=path::${dir}/CHANGELOG.md"
              fi
            done <<< "$APP_DIRS"
          fi

      # Check if changed directory is included in semver.yml
      - name: Check if directory is included in semver.yml
        id: check_semver_inclusion
        run: |
          APP_DIRS="${{ steps.changed_dirs.outputs.dirs }}"
          SEMVER_CONFIG=$(cat .github/semver.yml)
          INCLUDED_DIRS=()
          while IFS= read -r line; do
            if [[ "$line" =~ include:\s*-.* ]]; then
              DIR=$(echo "$line" | awk '{print substr($0, index($0,$2))}')
              if [[ "$APP_DIRS" == *"$DIR"* ]]; then
                INCLUDED_DIRS+=("$DIR")
              fi
            fi
          done <<< "$SEMVER_CONFIG"
          echo "::set-output name=included_dirs::${INCLUDED_DIRS[@]}"

      # Run semantic release for included directories
      - name: Run semantic release for included directories
        id: semantic_release
        run: |
          INCLUDED_DIRS="${{ steps.check_semver_inclusion.outputs.included_dirs }}"
          if [[ -z $INCLUDED_DIRS ]]; then
            echo "No included directories changed. Skipping semantic release."
          else
            IFS=$'\n' read -rd '' -a DIRS <<<"$INCLUDED_DIRS"
            for dir in "${DIRS[@]}"; do
              echo "Running semantic release for directory: $dir"
              cd "$dir" || exit 1
              echo "::group::Semantic Release for $dir"
              docker run --rm -v "$(pwd):/app" ghcr.io/codfish/semantic-release-action:v2 --tag_format "${{ steps.update_tag_format.outputs.tag_format }}" --additional_packages "['@semantic-release/changelog', '@semantic-release/git']" --plugins "[ '@semantic-release/commit-analyzer', '@semantic-release/release-notes-generator', ['@semantic-release/changelog', { changelogTitle: '# CHANGELOG', 'changelogFile': '${{ steps.changelog_path.outputs.path }}' }], '@semantic-release/github', ['@semantic-release/git', { 'assets': ['${{ steps.changelog_path.outputs.path }}'] }]]" --branches "['master']"
              echo "::endgroup::"
              cd .. || exit 1
            done
          fi
