name: Semantic Release for Apps

on:
  push:
    branches:
      - master
    paths:
    - 'modules/**'
permissions: write-all

jobs:
  release:
    name: Semantic Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        id: checkout
        with:
          fetch-depth: 0

      - name: Install 
        run : |
          npm install

      # Get the name of the directory that was changed
      - name: Get changed directories
        id: changed_dirs
        run: |
          echo "::set-output name=dirs::$(git diff-tree --no-commit-id --name-only -r ${{ github.sha }} | awk -F/ '{print $0}' | sort -u)"

      # Check if there are any tags available
      - name: Check for tags
        id: check_tags
        run: |
          if [[ -z $(git tag -l) ]]; then
            echo "::set-output name=has_tags::false"
          else
            echo "::set-output name=has_tags::true"
          fi

      # Update the tag format to include the name of the directory
      - name: Update tag format
        id: update_tag_format
        run: |
          APP_NAME=$(echo "${{ steps.changed_dirs.outputs.dirs }}" | awk '{print tolower($0)}')
          echo "::set-output name=tag_format::${APP_NAME}-v\${version}"

        # Add new version to changelog or set initial version if no tags are available
      - name: Add new version to changelog
        id: add_version_to_changelog
        run: |
            if [[ "${{ steps.check_tags.outputs.has_tags }}" == "true" ]]; then
            version=$(git describe --tags --abbrev=0)
            else
            version="1.0.0"
            echo "## Changelog" > CHANGELOG.md
            fi
            sed -i "s|\[[0-9]\+\.[0-9]\+\.[0-9]\+\]|[${version}] $(date +'%Y-%m-%d')|" CHANGELOG.md
            
      # https://github.com/marketplace/actions/semantic-release-action#usage
      - name: Semantic Release
        uses: docker://ghcr.io/codfish/semantic-release-action:v2
        id: semantic
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_GITHUB2 }}
        with:
          command: npx semantic-release --extends .releaserc.js

      # Get the latest version tag
      - name: Get latest version tag
        run: |
          version=$(git describe --tags --abbrev=0)
          echo "::set-output name=version::$version"

      - name: Semantic Release Output Summary
        id: semantic_summary
        run: |
          echo "### Semantic Version = ${{ steps.semantic.outputs.release-version }}\`" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "${{ toJson(steps.semantic.outputs) }}" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
        continue-on-error: true